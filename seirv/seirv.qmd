---
title: "SEIRV"
format: html
---

```{julia}
ENV["PATH"] = "/usr/bin:/bin:/usr/sbin:/sbin:/opt/homebrew/bin"
```

```{julia}
using AlgebraicPetri,AlgebraicPetri.TypedPetri
using Catlab, Catlab.CategoricalAlgebra, Catlab.Programs
using Catlab.WiringDiagrams, Catlab.Graphics
using AlgebraicDynamics.UWDDynam
using OrdinaryDiffEq
using LabelledArrays
using RCall
using Plots
```

```{julia}
epi_transitions = LabelledPetriNet(
  [:Pop],
  :infection=>((:Pop, :Pop)=>(:Pop, :Pop)),
  :progression=>(:Pop=>:Pop),
  :recovery=>(:Pop=>:Pop),
  :vaccination=>(:Pop=>:Pop)
)
to_graphviz(epi_transitions)
```

```{julia}
seir_uwd = @relation (S, E, I, R) where (S::Pop, E::Pop, I::Pop, R::Pop) begin
    infection(S, I, E, I)
    progression(E, I)
    recovery(I, R)
end
seir_acst = oapply_typed(epi_transitions, seir_uwd, [:β, :δ, :γ])
seir_lpn = dom(seir_acst)
to_graphviz(seir_lpn)
```

```{julia}
seirv_uwd = @relation (S, E, I, R, V) where (S::Pop, E::Pop, I::Pop, R::Pop, V::Pop) begin
    infection(S, I, E, I)
    infection(S, V, E, V)
    progression(E, I)
    recovery(I, R)
    vaccination(S, V)
end
seirv_acst = oapply_typed(epi_transitions, seirv_uwd, [:βᵢ, :βᵥ, :δ, :γ, :α])
seirv_lpn = dom(seirv_acst)
to_graphviz(seirv_lpn)
```

```{julia}
@rlibrary socialmixr
polymod = R"socialmixr::polymod"
contact_data = contact_matrix(
  polymod,
  countries = "United Kingdom",
  var"age.limits" = [0, 20, 40],
  symmetric = true)
cm = rcopy(contact_data[:matrix])'
dv = rcopy(contact_data[:demography][:population])
dvnames = rcopy(contact_data[:demography][:var"age.group"])
```


```{julia}
ι = 1e-6
u0 = @LArray [1-ι, 0.0, ι, 0.0] (:S, :E, :I, :R)
```

TODO: Initial conditions for multigroup

